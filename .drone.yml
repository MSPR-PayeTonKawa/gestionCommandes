kind: pipeline
type: kubernetes
name: GestionCommandes

platform:
  os: linux
  arch: amd64

steps:
  - name: sonarqube
    image: sonarsource/sonar-scanner-cli
    environment:
      SONAR_HOST_URL:
        from_secret: sonar_host
      SONAR_TOKEN:
        from_secret: sonar_token
    commands:
      - sonar-scanner -Dsonar.projectKey=MSPR-PayeTonKawa_gestionCommandes_909bdf9b-3c96-4895-9a16-4f87c5490a8f -Dsonar.sources=. -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN

  - name: test
    image: golang
    commands:
      - go test

  - name: docker
    image: plugins/docker
    settings:
      username:
        from_secret: harbor_username
      password:
        from_secret: harbor_password
      repo: registry.germainleignel.com/paye-ton-kawa/gestion-commandes
      registry: registry.germainleignel.com
  - name: notify_discord_success
    image: alpine:3.18
    settings:
      WEBHOOK:
        from_secret: discord_webhook
    commands:
      - apk add --no-cache curl
      - >
        curl -X POST -H "Content-Type: application/json" \
        -d '{"content": "Pipeline succeeded for project MSPR-PayeTonKawa_gestionCommandes"}' \
        $WEBHOOK
    when:
      status: [success]

  - name: notify_discord_failure
    image: alpine:3.18
    settings:
      WEBHOOK:
        from_secret: discord_webhook
    commands:
      - apk add --no-cache curl
      - >
        curl -X POST -H "Content-Type: application/json" \
        -d '{"content": "Pipeline failed for project MSPR-PayeTonKawa_gestionCommandes"}' \
        $WEBHOOK
    when:
      status: [failure]

trigger:
  branch:
    - main
