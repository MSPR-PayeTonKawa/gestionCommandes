apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: payetonkawa-certificate
  namespace: payetonkawa-prod  # Adjust the namespace to where your service is deployed
spec:
  secretName: payetonkawa-tls
  issuerRef:
    name: letsencrypt-prod  # Change to letsencrypt-staging if you're not ready for production
    kind: ClusterIssuer
  dnsNames:
  - api.payetonkawa.germainleignel.com
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gestioncommandes-deployment
  namespace: payetonkawa-prod
  labels:
    app: gestioncommandes
    environment: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gestioncommandes
  template:
    metadata:
      labels:
        app: gestioncommandes
        environment: production
    spec:
      automountServiceAccountToken: false
      containers:
        - name: gestioncommandes
          image: registry.germainleignel.com/paye-ton-kawa/gestion-commandes
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: commandes-secrets
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: commandes-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: commandes-secrets
                  key: POSTGRES_PASSWORD
            - name: DB_PORT
              value: "5432"
            - name: DB_HOST
              value: "postgres"
            - name: GIN_MODE
              value: "release"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: payetonkawa-prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: commandes-secrets
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: commandes-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: commandes-secrets
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: payetonkawa-ingress
  namespace: payetonkawa-prod
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - payetonkawa.germainleignel.com
      secretName: payetonkawa-tls
  rules:
    - host: api.payetonkawa.germainleignel.com
      http:
        paths:
          - path: /commandes
            pathType: Prefix
            backend:
              service:
                name: gestioncommandes-service
                port:
                  number: 8080
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: strip-commandes
  namespace: payetonkawa-prod
spec:
  stripPrefix:
    prefixes:
      - /commandes
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: payetonkawa-ingress-middleware
  namespace: payetonkawa-prod
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.middlewares: payetonkawa-prod-strip-commandes@kubernetescrd
spec:
  ingressClassName: traefik
  rules:
    - host: api.payetonkawa.germainleignel.com
      http:
        paths:
          - path: /commandes
            pathType: Prefix
            backend:
              service:
                name: gestioncommandes-service
                port:
                  number: 8080
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: payetonkawa-prod
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: commandes-secrets
  namespace: payetonkawa-prod
type: Opaque
data:
  POSTGRES_DB: Y29tbWFuZGVz
  POSTGRES_USER: Z21u
  POSTGRES_PASSWORD: YXplcnR5
---
apiVersion: v1
kind: Service
metadata:
  name: gestioncommandes-service
  namespace: payetonkawa-prod
  labels:
    environment: production
spec:
  selector:
    app: gestioncommandes
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: payetonkawa-prod
  labels:
    environment: production
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432%
